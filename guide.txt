http://www.visualisingdata.com/
http://www.visualisingdata.com/index.php/resources/
http://www.visualisingdata.com/index.php/references/
http://www.visualizing.org/

Beautiful Visualization
http://it-ebooks.info/book/283/

air traffic routes
flight path
animating flight paths
Direct Flights with Connections
create flight path map d3
Direct Flight Routes
traffic flow


heatmap google maps
density points
https://developers.google.com/maps/documentation/javascript/examples/layer-heatmap

D3
http://ramblings.mcpher.com/Home/excelquirks/d3/flights
http://xliberation.com/googlecharts/d3flights.html
http://mbostock.github.io/d3/talk/20111116/airports.html
http://techslides.com/map-direct-flights-with-d3/
http://mbostock.github.io/d3/talk/20111116/airports.html
https://github.com/mapmeld/flightmap
http://techslides.com/demos/d3/direct-flights.html
http://www.tnoda.com/blog/2014-04-02

Mapbox
https://www.mapbox.com/mapbox-studio/#darwin
https://www.mapbox.com/mapbox.js/example/v1.0.0/
https://www.mapbox.com/mapbox.js/example/v1.0.0/animating-flight-paths/

CartoDB
http://cartodb.com/tour/

Mapbox vs CartoDB
http://www.phase2technology.com/blog/open-source-tool-sets-for-creating-high-density-maps/

Leaflet
https://www.mapbox.com/mapbox.js/example/v1.0.0/plain-leaflet/

http://www.morethanamap.com/
http://www.morethanamap.com/demos/visualization/flights

http://rackpull.com/web-development/scrolling-map-animation/
http://www.amcharts.com/demos/flight-routes-map/

http://ramblings.mcpher.com/Home/excelquirks/getmaps/mapping/flight
http://spatial.ly/2013/05/great-world-flight-paths-map/

https://developers.google.com/maps/documentation/javascript/examples/polyline-simple
http://gis.stackexchange.com/questions/62432/how-to-create-a-visualisation-of-the-worlds-aeronautical-flight-paths
http://www.arcgis.com/home/webmap/viewer.html?webmap=abe4516f02af466db1f7c6376d485b85

http://openflights.org/data.html
http://planefinder.net/

http://www.visualisingdata.com/index.php/2012/02/bio-diaspora-visualising-interactions-between-populations-and-travel/

Flight Patterns
http://www.aaronkoblin.com/work/flightpatterns/
http://www.ted.com/talks/aaron_koblin?language=en
http://www.citylab.com/commute/2012/05/visualizing-day-flight-paths-us/2072/
http://www.wired.com/2014/03/plane-viz/

Charting culture
http://cultsci.net/
https://www.youtube.com/watch?v=4gIhRkCcD4U&feature=youtu.be


http://leafletjs.com/


https://lucachaves.cartodb.com/

tableau
http://kb.tableausoftware.com/articles/knowledgebase/using-path-shelf-pattern-analysis
http://www.tableausoftware.com/support/manuals/quickstart
http://community.tableausoftware.com/message/123829
http://sciolisticramblings.wordpress.com/2013/11/15/flights-of-fancy/
http://public.tableausoftware.com/download/workbooks/OpenFlightsDataExplorer?format=html




https://www.ruby-toolbox.com/categories/geocoding___maps
geocoder
http://www.rahuljiresal.com/2014/02/reverse-geocode-coordinates-in-ruby/
http://www.bing.com/maps/?FORM=Z9LH3
http://www.openstreetmap.org/
maps.google.com

geokit
https://github.com/geokit/geokit
google maps
https://developers.google.com/api-client-library/ruby/start/get_started




Location.offset(4999).limit(1000).each{|l|
Location.where(latitude:nil).each{|l|
  # if(l.address != '' && l.city != nil && l.country != nil)
    l.valid?
    puts l.address
    puts l.position
    l.save
  # end
}

locations = University.find_by_sql("SELECT universities.name FROM public.universities, public.locations WHERE universities.location_id = locations.id AND locations.country = '' AND locations.city = ''").map{|u|
  g = Geocoder.search(u.name)
  if !g.first.nil?
    {
      "uni"=>u.name,
      "address" => g.first.data['address'],
      "latlog" => "#{g.first.data['lat']}, #{g.first.data['lon']}"
    }
  else
    nil
  end
}
puts JSON.pretty_generate locations

locations = Person.all[0..20].map{|p|
  p.degrees.map{|d|
    l = d.course.university.location
    puts d.name
    puts d.course.university.name
    puts d.course.university.location.address
    g = nil
    if(l.city.nil? || l.country.nil?)
      g = Geocoder.search("#{d.course.university.name} #{l.city} #{l.country}")
    end
    (g.first != nil)?
      {"#{d.name}-#{d.course.university.name}"=>g.first.data['address'],"latlog"=>"#{g.first.data['lat']}, #{g.first.data['lon']}"}:
      nil
  }
}
puts JSON.pretty_generate locations

locations = Person.all[0..20].map{|p|
  next if p.work.nil?
  puts p.work.organ
  l = p.work.university.location
  puts l.address
  g = nil
  if(l.city.nil? || l.country.nil?)
    g = Geocoder.search("#{d.course.university.name} #{l.city} #{l.country}")
  else
    next
  end
  (!g.first.nil?)?
    {"#{d.organ}"=>g.first.data['address'],"latlog"=>"#{g.first.data['lat']}, #{g.first.data['lon']}"}:
    nil
}
puts JSON.pretty_generate locations


locations = Person.all[0..-1].map{|p|
  next if p.born.nil?
  l = p.born
  l.address
}
puts JSON.pretty_generate locations


SELECT 
  locations.city, 
  locations.uf, 
  locations.uf_abbr, 
  locations.country, 
  locations.country_abbr, 
  courses.name, 
  universities.name, 
  universities.abbr
FROM 
  public.universities, 
  public.courses, 
  public.locations
WHERE 
  universities.location_id = locations.id AND
  courses.university_id = universities.id
ORDER BY
  universities.name ASC;

Tempfile & Mechanize
http://stackoverflow.com/questions/3316043/how-do-i-download-a-remote-image-from-another-site-to-a-file-column-in-ruby-on-r
agent.get('http://example.com/foo').save_as 'a_file_name'

http://www.markhneedham.com/blog/2008/10/02/ruby-unzipping-a-file-using-rubyzip/

https://github.com/dannnylo/rtesseract
https://github.com/gemhome/rmagick
http://superuser.com/questions/361435/i-have-compiled-imagemagick-on-my-centos-and-rmagick-wont-install
brew install imagemagick --disable-openmp
#tesseract
sudo PKG_CONFIG_PATH=/usr/local/Cellar/imagemagick/6.8.9-7/lib/pkgconfig gem install rmagick -V


select pg_size_pretty(pg_database_size('lattesdata'));
select pg_size_pretty(pg_table_size('curriculums'));

https://github.com/sparklemotion/nokogiri/wiki/Cheat-sheet
https://gist.github.com/rstacruz/1569572
http://blog.ubiquo.me/now-on-edge-easier-relations-in-scaffold-gene/

create_table :problems, :id => false do |t|

xmldoc = Nokogiri::XML(File.read('app/helpers/lattes/0005349558315095.xml'))
xmldoc.xpath("//FORMACAO-ACADEMICA-TITULACAO").children



http://www.ruby-doc.org/stdlib-1.9.3/libdoc/singleton/rdoc/Singleton.html


SocketError
http://stackoverflow.com/questions/12358682/rails-post-socketerror-getaddrinfo-temporary-failure-in-name-resolution-on


#rails generate model person id16:primary_key name:string lattes_updated_at:date location:references knowlegde:references --no-id

Concurrency and Database Connections in RoR
Multiple Connection
FATAL: sorry, too many clients already
https://devcenter.heroku.com/articles/concurrency-and-database-connections
http://stackoverflow.com/questions/15086880/correct-setting-of-database-connection-pool-database-yml-for-single-threaded-rai

Multiple Database
http://stackoverflow.com/questions/17311199/connecting-to-multiple-databases-in-ruby-on-rails
def connection
  ActiveRecord::Base.establish_connection("#{Rails.env}_sec".to_sym).connection
end
establish_connection "#{Rails.env}_sec".to_sym
rake db:migrate:redo VERSION=version

rails generate model curriculum id16:string id10:string:uniq lattes_updated_at:date scholarship:string degree:string xml:xml
rails generate model update lattes_updated_at:date:uniq curriculum:references
rails generate model location city:string uf:string country:string country_abbr:string latitude:float longitude:float
rails generate model university name:string abbr:string organ:string location:references
rails generate model course name:string university:references
rails generate model degree name:string title:string year:integer course:references person:references
rails generate model person id16:string id10:string:uniq name:string scholarship:string lattes_updated_at:date location:references
rails generate model work organ:string person:references university:references
rails generate model knowledge major_subject:string subject:string subsection:string specialty:string
rails generate model orientation document:string title:string kind:string formation:string year:string language:string orientation:string student:string course:references knowledge:references person:references
rails generate migration CreateJoinTableKnowledgePeople knowledge person


rake db:drop
rails destroy model curriculum
rails destroy model update
rails destroy model location
rails destroy model university
rails destroy model degree
rails destroy model person
rails destroy model course
rails destroy model work
rails destroy model knowledge
rails destroy model orientation
rails destroy migration CreateJoinTableKnowledgePeople

rake db:reset

l = Location.create city: 'jp', uf: 'pb', country: 'pb'
l.universities.create :name => 'UFPB'
l.universities.last.course.create :name => 'PPGI'
l.universities.last.course.last.degree.create :name => 'DOUTORADO'
p = Person.create :name => 'luiz'
l.universities.last.course.last.degree.last.person = p

p = Person.create :name => 'luiz'

l = Location.create city: 'jp', uf: 'pb', country: 'pb'

u = University.create :name => 'UFPB'
u.location = l
u.save

c = Course.create :name => 'PPGI'
c.university = u
c.save

d1 = Degree.create :name => 'DOUTORADO'
d1.course = c
d1.save

d2 = Degree.create :name => 'MESTRADO'
d2.course = c
d2.save

p.degrees << d1
p.degrees << d2

p.location = l

p.save

p.degrees.each{|d| puts d.course.university.name}
p.degrees.each{|d| puts d.course.university.location.country}
Degree.all.each{|d| puts d.course.university.name}
Degree.all.each{|d| puts ">>> #{d.name} #{d.course.name} #{d.course.university.name} #{d.course.university.location.country}"}
Location.all.each{|l| puts " #{l.city} #{l.uf} #{l.country}" }

job has_many comments ()
rails generate model job title:string description:text
rails generate model comment name:string body:text job:references
rake db:migrate
job = Job.new
job.title = "Novo job!"
job.save
job.comments.create(name: "Fulano", body: "Outro comentário")
job.comments.size

rails destroy model job
rails destroy model comment





# Total 3900735 (10/2014)
# PQ 14339 (1[ABCD], 2)
# Outras Bolsas
# D 201984
# M 394958
# E 733707
# G 2005267
# D+G+M+G 3335916 (Resta 564819 Técn, Granduando, EM)
# 
# idx_particao:0 #outros
# idx_particao:1 #doutores
# idx_nacionalidade:e
# idx_nacionalidade:b
# idx_formacao_academica:graduacao
# idx_formacao_academica:especializacao
# idx_formacao_academica:mestrado
# idx_formacao_academica:doutorado
# idx_formacao_academica:bra
# idx_grd_area_atua:"CIENCIAS_AGRARIAS"
# idx_modalidade_bolsa:1a 
# idx_modalidade_bolsa:1b 
# idx_modalidade_bolsa:1c 
# idx_modalidade_bolsa:1d 
# idx_modalidade_bolsa:2
# idx_modalidade_bolsa:(pq) #produtividade
# idx_modalidade_bolsa:gm # mestrado

# todos
# url = "http://buscatextual.cnpq.br/buscatextual/busca.do?metodo=forwardPaginaResultados&registros=0;100&query=( +idx_nacionalidade:e) or ( +idx_nacionalidade:b)&analise=cv"
# pq
# url = "http://buscatextual.cnpq.br/buscatextual/busca.do?metodo=forwardPaginaResultados&registros=0;10&query=( +( idx_modalidade_bolsa:1a idx_modalidade_bolsa:1b idx_modalidade_bolsa:1c idx_modalidade_bolsa:1d idx_modalidade_bolsa:2) +idx_modalidade_bolsa:(pq)  +idx_nacionalidade:e) or ( +( idx_modalidade_bolsa:1a idx_modalidade_bolsa:1b idx_modalidade_bolsa:1c idx_modalidade_bolsa:1d idx_modalidade_bolsa:2) +idx_modalidade_bolsa:(pq)  +idx_nacionalidade:b)&analise=cv"



ORIENTACOES
//ORIENTACOES-CONCLUIDAS/ORIENTACOES-CONCLUIDAS-PARA-MESTRADO
DADOS-BASICOS-DE-ORIENTACOES-CONCLUIDAS-PARA-MESTRADO
	@NATUREZA
	@TIPO
	@TITULO
	@ANO
	@IDIOMA

	DETALHAMENTO-DE-ORIENTACOES-CONCLUIDAS-PARA-MESTRADO
		@TIPO-DE-ORIENTACAO
		@NOME-DA-INSTITUICAO
		@CODIGO-INSTITUICAO
		//INFORMACAO-ADICIONAL-INSTITUICAO[@CODIGO-INSTITUICAO='#{codigo}']/@NOME-PAIS-INSTITUICAO
		//INFORMACAO-ADICIONAL-INSTITUICAO[@CODIGO-INSTITUICAO='#{codigo}']/@SIGLA-INSTITUICAO
		//INFORMACAO-ADICIONAL-INSTITUICAO[@CODIGO-INSTITUICAO='#{codigo}']/@SIGLA-UF-INSTITUICAO
		//INFORMACAO-ADICIONAL-INSTITUICAO[@CODIGO-INSTITUICAO='#{codigo}']/@SIGLA-PAIS-INSTITUICAO
	
		@NOME-DO-CURSO
		@CODIGO-CURSO
		//INFORMACAO-ADICIONAL-CURSO[@CODIGO-CURSO='#{codigo}']/@NOME-GRANDE-AREA-DO-CONHECIMENTO
		//INFORMACAO-ADICIONAL-CURSO[@CODIGO-CURSO='#{codigo}']/@NOME-DA-AREA-DO-CONHECIMENTO
		//INFORMACAO-ADICIONAL-CURSO[@CODIGO-CURSO='#{codigo}']/@NOME-DA-SUB-AREA-DO-CONHECIMENTO
		//INFORMACAO-ADICIONAL-CURSO[@CODIGO-CURSO='#{codigo}']/@NOME-DA-ESPECIALIDADE
		//INFORMACAO-ADICIONAL-CURSO[@CODIGO-CURSO='#{codigo}']/@NIVEL-CURSO

PALAVRAS-CHAVE
SETORES-DE-ATIVIDADE
AREAS-DO-CONHECIMENTO

//DADOS-COMPLEMENTARES/ORIENTACOES-EM-ANDAMENTO/ORIENTACAO-EM-ANDAMENTO-DE-DOUTORADO
@NATUREZA
@TIPO
@TITULO
@ANO
@IDIOMA









http://dbpedia.org/page/Federal_University_of_Para%C3%ADba
http://dbpedia.org/sparql
select * where {
?subject rdf:type <http://schema.org/CollegeOrUniversity>.
?subject rdfs:label ?label.
?subject 
FILTER (lang(?label) = "en")
} LIMIT 100


https://www.freebase.com/
MQL
http://mql.freebaseapps.com/index

http://www.freebase.com/m/05v33x
m.05v33x
ns:rdf:type    ns:education.university;
ns:type.object.name    "Federal University of Para\xedba"@en;
ns:organization.organization.headquarters    ns:m.0jk7tcg;
ns:common.topic.alias    "Federal University of Paraiba"@en;
ns:common.topic.alias    "Universidade Federal da Para\xedba"@en;
ns:common.topic.alias    "UFPB"@en;
ns:common.topic.alias    "UFPB"@pt;

m.0jk7tcg
ns:rdf:type    ns:location.location
ns:location.mailing_address.citytown    ns:m.01hy9d;

m.01hy9d
ns:rdf:type    ns:location.citytown;
ns:common.topic.alias    "Joao Pessoa"@en;
ns:type.object.name    "Jo\xe3o Pessoa"@es;
ns:location.location.containedby    ns:m.015fr;
ns:location.location.containedby    ns:m.01hdp5;

015fr
ns:type.object.type    ns:location.country;

01hdp5
ns:type.object.type    ns:location.administrative_division;



ns:rdf:type    ns:education.university;
ns:type.object.name    null;
ns:organization.organization.headquarters    null;

[{
  "mid": null,
  "name": null,
  "type": "/education/university",
  "/organization/organization/headquarters": [{
    "/location/mailing_address/citytown": [{
      "name": null
    }]
  }]
}]

[{
  "mid": null,
  "name": null,
  "name~=": "University of Zurich",
  "/common/topic/alias~=": "Universitat Zurich",
  "type": "/education/university",
  "/organization/organization/headquarters":[{
  	"/location/mailing_address/citytown": [{
  		"name": null,
  		"/location/location/containedby": [{
  			"type": "/location/country",
  			"name": null
  		}],
  		"/location/location/containedby": [{
  			"type": "/location/administrative_division",
  			"name": null
  		}]
  	}]
  }]
}]


https://github.com/PerfectMemory/freebase-api

FreebaseAPI.session.mqlread({
  :type => '/internet/website',
  :id => '/en/github',
  :'/common/topic/official_website' => nil}
)

FreebaseAPI.session.mqlread({
  :mid => nil,
  :name => nil,
  :'name~=' => "University of Zurich",
  :type => "/education/university"
})


FreebaseAPI.session.mqlread({
  :mid => nil,
  :name => nil,
  :'name~=' => "University of Zurich",
  :type => "/education/university",
  :'/organization/organization/headquarters' => {
  	:'/location/mailing_address/citytown' => {
  		:name => nil
  	}
  }
 })

FreebaseAPI.session.mqlread({
  :mid => nil,
  :name => nil,
  :'name~=' => "University of Zurich",
  :type => "/education/university",
  :'/organization/organization/headquarters' =>[{
  	:'/location/mailing_address/citytown' => [{
  		:name => nil,
  		:'/location/location/containedby' => [{
  			:type => "/location/country",
  			:name => nil
  		}],
  		:'/location/location/containedby' => [{
  			:type => "/location/administrative_division",
  			:name => nil
  		}]
  	}]
  }]
})

FreebaseAPI.session.mqlread({
  :mid => nil,
  :name => nil,
  :'name~=' => "University of Zurich",
  :type => "/education/university",
  :'/organization/organization/headquarters' =>{
  	:'/location/mailing_address/citytown' => {
  		:name => nil,
  		:'/location/location/containedby' => {
  			:type => "/location/country",
  			:name => nil
  		},
  	}
  }
})


:'name~=' => "Federal",
:'name~=' => "Paraíba",
:'name~=' => "University of Zurich",

FreebaseAPI.session.mqlread({
  :mid => nil,
  :name => nil,
  :'name~=' => "University of Zurich",
  :type => "/education/university",
  :'/organization/organization/headquarters' =>{
  	:'/location/mailing_address/citytown' => {
  		:name => nil,
  		:'/location/location/containedby' => [{
  			:type => "/location/administrative_division",
  			:name => nil
  		}]
  	}
  }
})

FreebaseAPI.session.mqlread([{
  :mid => nil,
  :name => nil,
  :'name~=' => "Federal",
  :type => "/education/university",
  :'/organization/organization/headquarters' =>[{
  	:'/location/mailing_address/citytown' => [{
  		:name => nil,
  		:'/location/location/containedby' => [{
  			:type => "/location/country",
  			:name => nil
  		}],
  	}]
  }]
}])

FreebaseAPI.session.mqlread([{
  :mid => nil,
  :name => nil,
  :'name~=' => "Federal",
  :type => "/education/university",
  :'/organization/organization/headquarters' =>[{
    :'/location/mailing_address/citytown' => [{
      :name => nil,
      :'/location/location/containedby' => [{
        :type => "/location/administrative_division",
        :name => nil
      }],
    }]
  }]
}])

x.map{|y| 
  [
    y["name"],
    y["/organization/organization/headquarters"][0]["/location/mailing_address/citytown"][0]["/location/location/containedby"][0]["name"]
  ]
}


[XML, DTD, XSL] -> [SQL, DB, CSV]
excel http://www.excel-easy.com/examples/xml.html
http://xmltodb.sourceforge.net/
http://sourceforge.net/projects/xmltodb/
http://sourceforge.net/projects/xml2db/
http://xml2sql.sourceforge.net/
https://code.google.com/p/xml2csv-conv/
http://sourceforge.net/projects/convertxmltocsv/

http://www.altova.com/mapforce.html
http://www.altova.com/xmlspy/database-xml.html

http://www.convertcsv.com/csv-to-xml.htm
http://www.luxonsoftware.com/converter/xmltocsv
http://xmlgrid.net/xml2text.html

https://github.com/philipmat/discogs-xml2db

http://stackoverflow.com/questions/7941353/xml-dtd-sql-schema
http://search.cpan.org/dist/SGML-DTDParse/bin/dtdparse
http://search.cpan.org/~metzzo/XML-RDB/RDB.pm


LATTES
http://www.cnpq.br/web/guest/geral
http://lattes.cnpq.br/
http://www.cnpq.br/web/portal-lattes/outras-bases
http://www.cnpq.br/web/portal-lattes/dados-e-estatisticas
http://lmpl.cnpq.br/lmpl/

DATABASE XML
https://dev.mysql.com/doc/refman/5.5/en/load-xml.html

http://www.oracle.com/us/products/database/berkeley-db/xml/overview/index.html
http://docs.oracle.com/cd/B28359_01/appdev.111/b28419/d_xmlgen.htm#i1012053